name: Deploy Backend

on:
  push:
    branches:
      - master

permissions:
  contents: write  # Needed to push Git tags

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    env:
      MONGODB_URL: mongodb://localhost:27017/task-manager-api
      JWT_SECRET: thisismysecret
      SENDGRID_API_KEY: SG.TEST
      EMAIL_ACCOUNT: test@test.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        env:
          MONGODB_URL: mongodb://localhost:27017/task-manager-api
          JWT_SECRET: thisismysecret
        run: npm test
  
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Extract latest version + short SHA
        id: versioning
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v1.0.0")
          VERSION_NUMBER=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NUMBER"
          NEW_VERSION="v$MAJOR.$MINOR.$((PATCH + 1))"

          SHORT_SHA=$(git rev-parse --short HEAD)
          IMAGE_TAG="${NEW_VERSION#v}-${SHORT_SHA}"

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t "${{ secrets.DOCKER_USERNAME }}/task-manager-api:${IMAGE_TAG}" .
          docker push "${{ secrets.DOCKER_USERNAME }}/task-manager-api:${IMAGE_TAG}"

      # - name: Deploy with Helm
      #   run: |
      #     helm upgrade --install task-manager ./my-app \
      #       --namespace dev --create-namespace \
      #       -f ./my-app/values.yaml \
      #       -f ./my-app/values-secret.yaml \
      #       --set image.tag=${{ env.IMAGE_TAG }}

      - name: Push new Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "${{ env.NEW_VERSION }}"
          git push origin "${{ env.NEW_VERSION }}"
          
